// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#include <hxcpp.h>

#ifndef INCLUDED_SceneManager
#include <SceneManager.h>
#endif
#ifndef INCLUDED_StageCharacterCreation
#include <StageCharacterCreation.h>
#endif
#ifndef INCLUDED_StageLeaderboard
#include <StageLeaderboard.h>
#endif
#ifndef INCLUDED_StageMainGame
#include <StageMainGame.h>
#endif
#ifndef INCLUDED_StageMainMenu
#include <StageMainMenu.h>
#endif
#ifndef INCLUDED_StageMixing
#include <StageMixing.h>
#endif
#ifndef INCLUDED_lime_app_IModule
#include <lime/app/IModule.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObject
#include <openfl/display/DisplayObject.h>
#endif
#ifndef INCLUDED_openfl_display_DisplayObjectContainer
#include <openfl/display/DisplayObjectContainer.h>
#endif
#ifndef INCLUDED_openfl_display_IBitmapDrawable
#include <openfl/display/IBitmapDrawable.h>
#endif
#ifndef INCLUDED_openfl_display_InteractiveObject
#include <openfl/display/InteractiveObject.h>
#endif
#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
#ifndef INCLUDED_openfl_display_Stage
#include <openfl/display/Stage.h>
#endif
#ifndef INCLUDED_openfl_events_EventDispatcher
#include <openfl/events/EventDispatcher.h>
#endif
#ifndef INCLUDED_openfl_events_IEventDispatcher
#include <openfl/events/IEventDispatcher.h>
#endif

HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_21_setMyStage,"SceneManager","setMyStage",0x890e00dd,"SceneManager.setMyStage","SceneManager.hx",21,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_27_getMyStage,"SceneManager","getMyStage",0x85906269,"SceneManager.getMyStage","SceneManager.hx",27,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_33_switchToStageLeaderboard,"SceneManager","switchToStageLeaderboard",0xca2814fb,"SceneManager.switchToStageLeaderboard","SceneManager.hx",33,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_43_switchToStageMainMenu,"SceneManager","switchToStageMainMenu",0x09ed05ba,"SceneManager.switchToStageMainMenu","SceneManager.hx",43,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_51_switchToStageCharacterCreation,"SceneManager","switchToStageCharacterCreation",0x97ccad66,"SceneManager.switchToStageCharacterCreation","SceneManager.hx",51,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_59_switchToStageMixing,"SceneManager","switchToStageMixing",0x0d477b88,"SceneManager.switchToStageMixing","SceneManager.hx",59,0xee752ebd)
HX_LOCAL_STACK_FRAME(_hx_pos_5b4c41ed123d3de4_66_switchToStageMainGame,"SceneManager","switchToStageMainGame",0x05f2b40d,"SceneManager.switchToStageMainGame","SceneManager.hx",66,0xee752ebd)

void SceneManager_obj::__construct() { }

Dynamic SceneManager_obj::__CreateEmpty() { return new SceneManager_obj; }

void *SceneManager_obj::_hx_vtable = 0;

Dynamic SceneManager_obj::__Create(hx::DynamicArray inArgs)
{
	hx::ObjectPtr< SceneManager_obj > _hx_result = new SceneManager_obj();
	_hx_result->__construct();
	return _hx_result;
}

bool SceneManager_obj::_hx_isInstanceOf(int inClassId) {
	return inClassId==(int)0x00000001 || inClassId==(int)0x1a2a2ea1;
}

 ::openfl::display::Stage SceneManager_obj::myStage;

void SceneManager_obj::setMyStage( ::openfl::display::Stage stageref){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_21_setMyStage)
HXDLIN(  21)		::SceneManager_obj::myStage = stageref;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC1(SceneManager_obj,setMyStage,(void))

 ::openfl::display::Stage SceneManager_obj::getMyStage(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_27_getMyStage)
HXDLIN(  27)		return ::SceneManager_obj::myStage;
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,getMyStage,return )

void SceneManager_obj::switchToStageLeaderboard(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_33_switchToStageLeaderboard)
HXLINE(  34)		::SceneManager_obj::myStage->removeChildren(null(),null());
HXLINE(  36)		::StageLeaderboard_obj::setup(::SceneManager_obj::myStage);
HXLINE(  37)		::StageLeaderboard_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,switchToStageLeaderboard,(void))

void SceneManager_obj::switchToStageMainMenu(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_43_switchToStageMainMenu)
HXLINE(  44)		::SceneManager_obj::myStage->removeChildren(null(),null());
HXLINE(  45)		::StageMainMenu_obj::setup(::SceneManager_obj::myStage);
HXLINE(  46)		::StageMainMenu_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,switchToStageMainMenu,(void))

void SceneManager_obj::switchToStageCharacterCreation(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_51_switchToStageCharacterCreation)
HXLINE(  52)		::SceneManager_obj::myStage->removeChildren(null(),null());
HXLINE(  53)		::StageCharacterCreation_obj::setup(::SceneManager_obj::myStage);
HXLINE(  54)		::StageCharacterCreation_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,switchToStageCharacterCreation,(void))

void SceneManager_obj::switchToStageMixing(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_59_switchToStageMixing)
HXLINE(  60)		::SceneManager_obj::myStage->removeChildren(null(),null());
HXLINE(  61)		::StageMixing_obj::setup(::SceneManager_obj::myStage);
HXLINE(  62)		::StageMixing_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,switchToStageMixing,(void))

void SceneManager_obj::switchToStageMainGame(){
            	HX_STACKFRAME(&_hx_pos_5b4c41ed123d3de4_66_switchToStageMainGame)
HXLINE(  67)		::SceneManager_obj::myStage->removeChildren(null(),null());
HXLINE(  68)		::StageMainGame_obj::setup(::SceneManager_obj::myStage);
HXLINE(  69)		::StageMainGame_obj::start();
            	}


STATIC_HX_DEFINE_DYNAMIC_FUNC0(SceneManager_obj,switchToStageMainGame,(void))


SceneManager_obj::SceneManager_obj()
{
}

bool SceneManager_obj::__GetStatic(const ::String &inName, Dynamic &outValue, hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"myStage") ) { outValue = ( myStage ); return true; }
		break;
	case 10:
		if (HX_FIELD_EQ(inName,"setMyStage") ) { outValue = setMyStage_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"getMyStage") ) { outValue = getMyStage_dyn(); return true; }
		break;
	case 19:
		if (HX_FIELD_EQ(inName,"switchToStageMixing") ) { outValue = switchToStageMixing_dyn(); return true; }
		break;
	case 21:
		if (HX_FIELD_EQ(inName,"switchToStageMainMenu") ) { outValue = switchToStageMainMenu_dyn(); return true; }
		if (HX_FIELD_EQ(inName,"switchToStageMainGame") ) { outValue = switchToStageMainGame_dyn(); return true; }
		break;
	case 24:
		if (HX_FIELD_EQ(inName,"switchToStageLeaderboard") ) { outValue = switchToStageLeaderboard_dyn(); return true; }
		break;
	case 30:
		if (HX_FIELD_EQ(inName,"switchToStageCharacterCreation") ) { outValue = switchToStageCharacterCreation_dyn(); return true; }
	}
	return false;
}

bool SceneManager_obj::__SetStatic(const ::String &inName,Dynamic &ioValue,hx::PropertyAccess inCallProp)
{
	switch(inName.length) {
	case 7:
		if (HX_FIELD_EQ(inName,"myStage") ) { myStage=ioValue.Cast<  ::openfl::display::Stage >(); return true; }
	}
	return false;
}

#if HXCPP_SCRIPTABLE
static hx::StorageInfo *SceneManager_obj_sMemberStorageInfo = 0;
static hx::StaticInfo SceneManager_obj_sStaticStorageInfo[] = {
	{hx::fsObject /*::openfl::display::Stage*/ ,(void *) &SceneManager_obj::myStage,HX_HCSTRING("myStage","\xb2","\x13","\x0b","\x2d")},
	{ hx::fsUnknown, 0, null()}
};
#endif

static void SceneManager_obj_sMarkStatics(HX_MARK_PARAMS) {
	HX_MARK_MEMBER_NAME(SceneManager_obj::__mClass,"__mClass");
	HX_MARK_MEMBER_NAME(SceneManager_obj::myStage,"myStage");
};

#ifdef HXCPP_VISIT_ALLOCS
static void SceneManager_obj_sVisitStatics(HX_VISIT_PARAMS) {
	HX_VISIT_MEMBER_NAME(SceneManager_obj::__mClass,"__mClass");
	HX_VISIT_MEMBER_NAME(SceneManager_obj::myStage,"myStage");
};

#endif

hx::Class SceneManager_obj::__mClass;

static ::String SceneManager_obj_sStaticFields[] = {
	HX_HCSTRING("myStage","\xb2","\x13","\x0b","\x2d"),
	HX_HCSTRING("setMyStage","\x30","\x38","\xea","\x7f"),
	HX_HCSTRING("getMyStage","\xbc","\x99","\x6c","\x7c"),
	HX_HCSTRING("switchToStageLeaderboard","\x8e","\x57","\xeb","\xe6"),
	HX_HCSTRING("switchToStageMainMenu","\x47","\xb9","\x2e","\x7a"),
	HX_HCSTRING("switchToStageCharacterCreation","\x39","\xa0","\x40","\x92"),
	HX_HCSTRING("switchToStageMixing","\xd5","\x41","\xd1","\xb2"),
	HX_HCSTRING("switchToStageMainGame","\x9a","\x67","\x34","\x76"),
	::String(null())
};

void SceneManager_obj::__register()
{
	hx::Object *dummy = new SceneManager_obj;
	SceneManager_obj::_hx_vtable = *(void **)dummy;
	hx::Static(__mClass) = new hx::Class_obj();
	__mClass->mName = HX_HCSTRING("SceneManager","\xa1","\x2e","\x2a","\x1a");
	__mClass->mSuper = &super::__SGetClass();
	__mClass->mConstructEmpty = &__CreateEmpty;
	__mClass->mConstructArgs = &__Create;
	__mClass->mGetStaticField = &SceneManager_obj::__GetStatic;
	__mClass->mSetStaticField = &SceneManager_obj::__SetStatic;
	__mClass->mMarkFunc = SceneManager_obj_sMarkStatics;
	__mClass->mStatics = hx::Class_obj::dupFunctions(SceneManager_obj_sStaticFields);
	__mClass->mMembers = hx::Class_obj::dupFunctions(0 /* sMemberFields */);
	__mClass->mCanCast = hx::TCanCast< SceneManager_obj >;
#ifdef HXCPP_VISIT_ALLOCS
	__mClass->mVisitFunc = SceneManager_obj_sVisitStatics;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mMemberStorageInfo = SceneManager_obj_sMemberStorageInfo;
#endif
#ifdef HXCPP_SCRIPTABLE
	__mClass->mStaticStorageInfo = SceneManager_obj_sStaticStorageInfo;
#endif
	hx::_hx_RegisterClass(__mClass->mName, __mClass);
}

