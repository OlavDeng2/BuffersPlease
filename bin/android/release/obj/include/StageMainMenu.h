// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_StageMainMenu
#define INCLUDED_StageMainMenu

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

#ifndef INCLUDED_openfl_display_Sprite
#include <openfl/display/Sprite.h>
#endif
HX_DECLARE_CLASS0(StageMainMenu)
HX_DECLARE_CLASS2(lime,app,IModule)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Sprite)
HX_DECLARE_CLASS2(openfl,display,Stage)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES StageMainMenu_obj : public  ::openfl::display::Sprite_obj
{
	public:
		typedef  ::openfl::display::Sprite_obj super;
		typedef StageMainMenu_obj OBJ_;
		StageMainMenu_obj();

	public:
		enum { _hx_ClassId = 0x4e2f1f36 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=true,const char *inName="StageMainMenu")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,true,"StageMainMenu"); }
		static hx::ObjectPtr< StageMainMenu_obj > __new();
		static hx::ObjectPtr< StageMainMenu_obj > __alloc(hx::Ctx *_hx_ctx);
		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~StageMainMenu_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("StageMainMenu","\x36","\x1f","\x2f","\x4e"); }

		static  ::openfl::display::Stage myStage;
		static void setup( ::openfl::display::Stage stageref);
		static ::Dynamic setup_dyn();

		static void start();
		static ::Dynamic start_dyn();

		static void addBackground();
		static ::Dynamic addBackground_dyn();

		static void showTitle();
		static ::Dynamic showTitle_dyn();

};


#endif /* INCLUDED_StageMainMenu */ 
