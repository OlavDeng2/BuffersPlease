// Generated by Haxe 3.4.2 (git build master @ 890f8c7)
#ifndef INCLUDED_SceneManager
#define INCLUDED_SceneManager

#ifndef HXCPP_H
#include <hxcpp.h>
#endif

HX_DECLARE_CLASS0(SceneManager)
HX_DECLARE_CLASS2(lime,app,IModule)
HX_DECLARE_CLASS2(openfl,display,DisplayObject)
HX_DECLARE_CLASS2(openfl,display,DisplayObjectContainer)
HX_DECLARE_CLASS2(openfl,display,IBitmapDrawable)
HX_DECLARE_CLASS2(openfl,display,InteractiveObject)
HX_DECLARE_CLASS2(openfl,display,Stage)
HX_DECLARE_CLASS2(openfl,events,EventDispatcher)
HX_DECLARE_CLASS2(openfl,events,IEventDispatcher)



class HXCPP_CLASS_ATTRIBUTES SceneManager_obj : public hx::Object
{
	public:
		typedef hx::Object super;
		typedef SceneManager_obj OBJ_;
		SceneManager_obj();

	public:
		enum { _hx_ClassId = 0x1a2a2ea1 };

		void __construct();
		inline void *operator new(size_t inSize, bool inContainer=false,const char *inName="SceneManager")
			{ return hx::Object::operator new(inSize,inContainer,inName); }
		inline void *operator new(size_t inSize, int extra)
			{ return hx::Object::operator new(inSize+extra,false,"SceneManager"); }

		hx::ObjectPtr< SceneManager_obj > __new() {
			hx::ObjectPtr< SceneManager_obj > __this = new SceneManager_obj();
			__this->__construct();
			return __this;
		}

		static hx::ObjectPtr< SceneManager_obj > __alloc(hx::Ctx *_hx_ctx) {
			SceneManager_obj *__this = (SceneManager_obj*)(hx::Ctx::alloc(_hx_ctx, sizeof(SceneManager_obj), false, "SceneManager"));
			*(void **)__this = SceneManager_obj::_hx_vtable;
			return __this;
		}

		static void * _hx_vtable;
		static Dynamic __CreateEmpty();
		static Dynamic __Create(hx::DynamicArray inArgs);
		//~SceneManager_obj();

		HX_DO_RTTI_ALL;
		static bool __GetStatic(const ::String &inString, Dynamic &outValue, hx::PropertyAccess inCallProp);
		static bool __SetStatic(const ::String &inString, Dynamic &ioValue, hx::PropertyAccess inCallProp);
		static void __register();
		bool _hx_isInstanceOf(int inClassId);
		::String __ToString() const { return HX_HCSTRING("SceneManager","\xa1","\x2e","\x2a","\x1a"); }

		static  ::openfl::display::Stage myStage;
		static void setMyStage( ::openfl::display::Stage stageref);
		static ::Dynamic setMyStage_dyn();

		static  ::openfl::display::Stage getMyStage();
		static ::Dynamic getMyStage_dyn();

		static void switchToStageLeaderboard();
		static ::Dynamic switchToStageLeaderboard_dyn();

		static void switchToStageMainMenu();
		static ::Dynamic switchToStageMainMenu_dyn();

		static void switchToStageCharacterCreation();
		static ::Dynamic switchToStageCharacterCreation_dyn();

		static void switchToStageMixing();
		static ::Dynamic switchToStageMixing_dyn();

		static void switchToStageMainGame();
		static ::Dynamic switchToStageMainGame_dyn();

};


#endif /* INCLUDED_SceneManager */ 
